openapi: 3.0.0
info:
  title: FriendsAndChill API
  version: 1.0.0
  description: API para autenticación de usuarios y gestión de amigos.

servers:
  - url: http://localhost:3000

paths:
  /register:
    post:
      summary: Crear nuevo usuario
      tags:
        - Usuarios
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                  example: eduardo
                email:
                  type: string
                  example: eduardo@example.com
                password:
                  type: string
                  example: mysecurepassword
      responses:
        '201':
          description: Usuario creado exitosamente
        '400':
          description: El email o username ya están en uso

  /login:
    post:
      summary: Iniciar sesión de usuario
      tags:
        - Usuarios
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: eduardo@example.com
                password:
                  type: string
                  example: mysecurepassword
      responses:
        '200':
          description: Login exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    example: eduardo
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6...
        '400':
          description: Usuario no encontrado o contraseña incorrecta

  /getUsers:
    get:
      summary: Obtener todos los usuarios
      tags:
        - Usuarios
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    username:
                      type: string
                      example: eduardo
                    email:
                      type: string
                      example: eduardo@example.com

  /sendFriendRequest:
    post:
      summary: Enviar solicitud de amistad
      tags:
        - Amigos
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - toUserName
              properties:
                toUserName:
                  type: string
                  example: maria
      responses:
        '200':
          description: Solicitud de amistad enviada exitosamente
        '400':
          description: Ya son amigos, solicitud ya enviada, o no puedes agregarte a ti mismo
        '404':
          description: Usuario receptor no encontrado

  /acceptFriendRequest:
    post:
      summary: Aceptar solicitud de amistad
      tags:
        - Amigos
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - requesterUserName
              properties:
                requesterUserName:
                  type: string
                  example: eduardo
      responses:
        '200':
          description: Solicitud aceptada y ahora son amigos
        '400':
          description: No tienes solicitud de este usuario
        '404':
          description: Usuario solicitante no encontrado

  /rejectFriendRequest:
    post:
      summary: Rechazar solicitud de amistad
      tags:
        - Amigos
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - requesterUserName
              properties:
                requesterUserName:
                  type: string
                  example: eduardo
      responses:
        '200':
          description: Solicitud rechazada exitosamente
        '400':
          description: No tienes solicitud de este usuario
        '404':
          description: Usuario solicitante no encontrado

  /getFriendRequestsReceived:
    get:
      summary: Obtener solicitudes de amistad recibidas
      tags:
        - Amigos
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de solicitudes recibidas
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    username:
                      type: string
                      example: juan
                    email:
                      type: string
                      example: juan@example.com

  /getFriends:
    get:
      summary: Obtener lista de amigos del usuario actual
      tags:
        - Amigos
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de amigos
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    username:
                      type: string
                      example: maria
                    email:
                      type: string
                      example: maria@example.com

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  /searchUser/{username}:
      get:
        summary: Buscar un usuario por su nombre de usuario
        tags:
          - Usuarios
        parameters:
          - name: username
            in: path
            required: true
            schema:
              type: string
            description: Nombre de usuario a buscar
          - name: Authorization
            in: header
            required: true
            schema:
              type: string
              example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6...
            description: Token JWT para autenticación
        responses:
          '200':
            description: Usuario encontrado exitosamente
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: 6612a9cf6b2f33a4df12c3e0
                    username:
                      type: string
                      example: maria
                    email:
                      type: string
                      example: maria@example.com
          '404':
            description: Usuario no encontrado
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Usuario no encontrado
          '500':
            description: Error del servidor
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Error del servidor
                    error:
                      type: string

paths:
  /api/emotion/predict:
    post:
      summary: Obtener recomendación de película basada en emociones detectadas
      tags:
        - Emociones
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                texto:
                  type: string
                  example: "Quiero ver algo que me haga sentir esperanza"
      responses:
        '200':
          description: Película recomendada con emociones detectadas
          content:
            application/json:
              schema:
                type: object
                properties:
                  emociones:
                    type: array
                    items:
                      type: object
                      properties:
                        nombre:
                          type: string
                          example: joy
                        confianza:
                          type: number
                          example: 0.832
                  generos_usados:
                    type: array
                    items:
                      type: string
                      example: Comedy
                  pelicula_recomendada:
                    type: object
                    nullable: true
                    properties:
                      title:
                        type: string
                        example: "Inside Out"
                      vote_average:
                        type: number
                        example: 8.1
                      overview:
                        type: string
                        example: "Una niña lidia con emociones que toman el control de su mente."
        '400':
          description: Error por falta de parámetro
        '500':
          description: Error interno del servidor
paths:
  /api/groups:
    post:
      summary: Crear un nuevo grupo
      tags:
        - Grupos
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Cine Club de Amigos
      responses:
        '201':
          description: Grupo creado exitosamente
        '400':
          description: El grupo ya existe o datos inválidos
        '500':
          description: Error interno del servidor

  /api/groups/{groupId}/add-member:
    post:
      summary: Agregar un miembro al grupo (solo si es amigo)
      tags:
        - Grupos
      security:
        - bearerAuth: []
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: maria
      responses:
        '200':
          description: Usuario agregado exitosamente
        '400':
          description: El usuario no es amigo o ya es miembro
        '404':
          description: Grupo o usuario no encontrado
        '500':
          description: Error del servidor

  /api/groups/{groupId}/add-movie:
    post:
      summary: Agregar una película a un grupo
      tags:
        - Grupos
      security:
        - bearerAuth: []
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tmdbId:
                  type: string
                  example: "12345"
                title:
                  type: string
                  example: "Inception"
      responses:
        '200':
          description: Película agregada al grupo
        '400':
          description: Ya existe en el grupo o datos inválidos
        '404':
          description: Grupo no encontrado
        '500':
          description: Error del servidor

  /api/groups/my:
    get:
      summary: Obtener los grupos del usuario actual
      tags:
        - Grupos
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de grupos
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                    name:
                      type: string
                    members:
                      type: array
                      items:
                        type: string
                    movies:
                      type: array
                      items:
                        type: object
                        properties:
                          tmdbId:
                            type: string
                          title:
                            type: string
                          addedBy:
                            type: string
                          addedAt:
                            type: string
                            format: date-time
        '500':
          description: Error del servidor
            /api/watchlist:
    post:
      summary: Crear una nueva lista personal
      tags:
        - Watchlists
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Mis películas favoritas
      responses:
        '201':
          description: Lista creada exitosamente
        '400':
          description: Faltan campos obligatorios
        '500':
          description: Error del servidor

  /api/watchlist/{listId}/add:
    post:
      summary: Agregar película a una lista personal
      tags:
        - Watchlists
      security:
        - bearerAuth: []
      parameters:
        - name: listId
          in: path
          required: true
          schema:
            type: string
            example: 664f3a9469cb17f123456789
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tmdbId:
                  type: string
                  example: "12345"
                title:
                  type: string
                  example: "Inception"
      responses:
        '200':
          description: Película añadida exitosamente
        '404':
          description: Lista no encontrada
        '403':
          description: No autorizado para modificar esta lista

  /api/watchlist/my:
    get:
      summary: Obtener listas personales del usuario autenticado
      tags:
        - Watchlists
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Listas personales
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                    name:
                      type: string
                    owner:
                      type: string
                    movies:
                      type: array
                      items:
                        type: object
                        properties:
                          tmdbId:
                            type: string
                          title:
                            type: string

  /api/watchlist/friend/{username}:
    get:
      summary: Ver las listas de un amigo (si son amigos)
      tags:
        - Watchlists
      security:
        - bearerAuth: []
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
            example: maria
      responses:
        '200':
          description: Listas del amigo
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    movies:
                      type: array
                      items:
                        type: object
                        properties:
                          tmdbId:
                            type: string
                          title:
                            type: string
        '403':
          description: No autorizado. No son amigos
        '404':
          description: Usuario no encontrado
